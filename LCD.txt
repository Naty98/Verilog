`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date:    19:48:39 03/29/2019 
// Design Name: 
// Module Name:    lcd 
// Project Name: 
// Target Devices: 
// Tool versions: 
// Description: 
//
// Dependencies: 
//
// Revision: 
// Revision 0.01 - File Created
// Additional Comments: 
//
//////////////////////////////////////////////////////////////////////////////////
module lcd(
	input iClk,
	output reg lcd_rs,
	output reg lcd_rw,
	output reg lcd_7,
	output reg lcd_6,
	output reg lcd_5,
	output reg lcd_4,
	output reg lcd_e
    );

	parameter n = 27;
	parameter k = 17;
	
	reg [n-1:0] count = 0;
	reg lcd_busy = 1;
	reg lcd_stb;
	
	reg [5:0] lcd_code;
	reg [6:0] lcd_stuff;
	
	always @(posedge iClk)
	begin
		count <= count + 1;
		case(count[k+7:k+2])
			0: lcd_code <= 6'b000010; //function set
			1: lcd_code <= 6'b000010; 
			2: lcd_code <= 6'b001100; 
			3: lcd_code <= 6'b000000; //display on/off control
			4: lcd_code <= 6'b001100; 
			5: lcd_code <= 6'b000000; //display clear
			6: lcd_code <= 6'b000001; 
			7: lcd_code <= 6'b000000; //entry mode set
			8: lcd_code <= 6'b000110; 
			9: lcd_code <= 6'h23;     //1
			10:lcd_code <= 6'h21;
			11:lcd_code <= 6'h22;     //.
			12:lcd_code <= 6'h2E;
			13:lcd_code <= 6'h24;     //H
			14:lcd_code <= 6'h28;
			15:lcd_code <= 6'h25;     //U
			16:lcd_code <= 6'h25;
			17:lcd_code <= 6'h24;     //M
			18:lcd_code <= 6'h2D;
			19:lcd_code <= 6'h22;     //
			20:lcd_code <= 6'h20;
			21:lcd_code <= 6'h23;     //2
			22:lcd_code <= 6'h22;
			23:lcd_code <= 6'h22;     //.
			24:lcd_code <= 6'h2E;   
			25:lcd_code <= 6'h24;     //F
			26:lcd_code <= 6'h26;
			27:lcd_code <= 6'h24;     //L
			28:lcd_code <= 6'h2C;
			29:lcd_code <= 6'h25;     //U
			30:lcd_code <= 6'h25;
			31:lcd_code <= 6'h24;     //J
			32:lcd_code <= 6'h2A;
			33:lcd_code <= 6'h24;     //O
			34:lcd_code <= 6'h2F;
			35:lcd_code <= 6'h0C; //function set
			36:lcd_code <= 6'h00;
			37:lcd_code <= 6'h23;     //3
			38:lcd_code <= 6'h23;
			39:lcd_code <= 6'h22;     //.
			40:lcd_code <= 6'h2E;
			41:lcd_code <= 6'h24;     //N
			42:lcd_code <= 6'h2E;
			43:lcd_code <= 6'h24;     //I
			44:lcd_code <= 6'h29;
			45:lcd_code <= 6'h25;     //V
			46:lcd_code <= 6'h26;
			47:lcd_code <= 6'h22;     //
			48:lcd_code <= 6'h20;
			49:lcd_code <= 6'h23;     //4
			50:lcd_code <= 6'h24;
			51:lcd_code <= 6'h22;     //.
			52:lcd_code <= 6'h2E;
			53:lcd_code <= 6'h2D;     //°
			54:lcd_code <= 6'h2F;
			55:lcd_code <= 6'h24;     //C
			56:lcd_code <= 6'h23;
		default: lcd_code <= 6'b010000;
		endcase
		
		if(lcd_rw)
			lcd_busy <= 0;
			lcd_stb <= ^count[k+1:k+0] & ~lcd_rw & lcd_busy; //clkrate / 2^(k+2)
			lcd_stuff <= {lcd_stb,lcd_code};
			{lcd_e, lcd_rs, lcd_rw, lcd_7, lcd_6, lcd_5, lcd_4} <= lcd_stuff;
	end
			
endmodule
