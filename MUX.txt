`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date:    11:44:04 04/01/2019 
// Design Name: 
// Module Name:    MUX 
// Project Name: 
// Target Devices: 
// Tool versions: 
// Description: 
//
// Dependencies: 
//
// Revision: 
// Revision 0.01 - File Created
// Additional Comments: 
//
//////////////////////////////////////////////////////////////////////////////////
module MUX(
   input iclk,
	input [3:0] ianodos,
	input [6:0] iBCD1,
	input [6:0] iBCD2,
	input [6:0] iBCD3,
	input [6:0] iBCD4,
	output [6:0] osel
     );
	 
	 reg [6:0] rvsel_Q;
	 reg [6:0] rvsel_D;
	 
	 assign osel = rvsel_Q;
	 
	 always @(posedge iclk)
	 begin
		rvsel_Q = rvsel_D;
	 end
	 
	 always @*
	 begin
		if(ianodos == 4'b1110)
			begin
				rvsel_D = iBCD4;
			end
		else if(ianodos == 4'b1101)
			begin
				rvsel_D = iBCD3;
			end
		else if(ianodos == 4'b1011)
			begin
				rvsel_D = iBCD2;  
			end
		else if(ianodos == 4'b0111)
			begin
				rvsel_D = iBCD1;  
			end
		else
			rvsel_D = rvsel_Q;
		end

endmodule

